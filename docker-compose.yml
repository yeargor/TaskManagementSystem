services:
  my-postgres:
    image: postgres:16
    container_name: my-postgres
    restart: always
    environment:
      POSTGRES_DB: springAuth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pleasecomein
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  my-keycloak:
    image: keycloak/keycloak:22.0.5
    container_name: my-keycloak
    restart: always
    depends_on:
      my-postgres:
        condition: service_healthy
    environment:
#      KC_DB: postgres
#      KC_DB_URL: jdbc:postgresql://my-postgres:5432/springAuth
#      KC_DB_USERNAME: postgres
#      KC_DB_PASSWORD: pleasecomein
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD : admin
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak-custom-0.1.0-SNAPSHOT-jar-with-dependencies.jar:/opt/keycloak/providers/keycloak-custom.jar
#      - ./realms/realm-export.json:/opt/keycloak/data/import/realm-export.json
    command:
      - "start-dev"
      - "--spi-user-storage-provider=custom-user-provider"
      - "--spi-user-storage-custom-user-provider-enabled=true"
volumes:
  postgres-data:
